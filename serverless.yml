# service name
service: wordbose-test-api

# Create an optimized package for our functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-west-2
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  #environment:
  #  SAMPLE_ENV_VAR: ${env:SAMPLE_ENV_VAR}
  environment:
    tableName: transcripts-test
  
  # iamRoleStatements = iamRole for lambda functions
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-west-2:*:*"

functions:
  get:
    handler: get.handler
    events:
        - http:
            path: transcript/{id}
            method: get
            cors: true
            authorizer: aws_iam
  list:
    handler: list.handler
    events:
      - http:
          path: transcript
          method: get
          cors: true
          authorizer: aws_iam
  update:
    handler: update.handler
    events:
      - http:
          path: transcript/{id}
          method: put
          cors: true
          authorizer: aws_iam
  delete:
    handler: delete.handler
    events:
      - http:
        path: transcript/{id}
        method: delete
        cors: true
        authorizer: aws_iam

# Create resources with CloudFormation templates
resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}

